<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:http="http://www.springframework.org/schema/security"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<context:component-scan base-package="com.codeproof" />

	<mvc:annotation-driven />

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".html" />
	</bean>

	<mvc:resources mapping="/static/**" location="/" />

	<mvc:default-servlet-handler />

	<http:http auto-config="true" use-expressions="true">

		<http:intercept-url pattern="/login/**" access="hasRole('ROLE_USER')" />

		<!-- access denied page -->
		<http:access-denied-handler error-page="/403" />
<!-- <http:form-login login-page="/login" default-target-url="/welcome"
			authentication-failure-url="/login?error" username-parameter="username"
			password-parameter="password" /> -->
		<http:form-login login-page="/login/validate"/>
		<http:logout logout-success-url="/login?logout" />
		<!-- enable csrf protection -->
		<!-- <http:csrf /> -->
	</http:http>

	<!-- Select users and user_roles from database -->
	<http:authentication-manager>
		<!-- <http:authentication-provider> -->
			<http:authentication-provider user-service-ref="userDetailService"/>
			<!-- <http:password-encoder hash="sha-1" />
		</http:authentication-provider> -->
	</http:authentication-manager>
	
	 <!-- Configure to plugin JSON as request and response in method handler -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonMessageConverter"/>
            </list>
        </property>
    </bean>
     
    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </bean> 

</beans>